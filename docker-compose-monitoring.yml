version: '3.8'
services:
  # NGINX 메트릭 수집기
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    command:
      - -nginx.scrape-uri=http://nginx_load_balancer/nginx_status
    ports:
      - "9113:9113"
    networks:
      - fastapi_network
    restart: always

  # PostgreSQL 메트릭 수집기
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    environment:
      DATA_SOURCE_NAME: "postgresql://root:test@dev_postgres:5432/fastapi_playground?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - fastapi_network
    restart: always

  # 시스템 메트릭 수집기 (CPU, 메모리 등)
  node-exporter:
    image: prom/node-exporter:v1.5.0
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - fastapi_network
    restart: always

  # Redis 메트릭 수집기
  redis-exporter:
    image: oliver006/redis_exporter:v1.45.0
    environment:
      REDIS_ADDR: dev_redis:6379
      REDIS_PASSWORD: myStrongPassword
    ports:
      - "9121:9121"
    networks:
      - fastapi_network
    restart: always

  # 캐드비저 - 컨테이너 리소스 모니터링
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - fastapi_network
    restart: always

  # Prometheus - 메트릭 저장 및 쿼리 엔진
  prometheus:
    image: prom/prometheus:v2.42.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - fastapi_network
    restart: always

  # Grafana - 시각화 도구
  grafana:
    image: grafana/grafana:9.4.7
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_SERVER_ROOT_URL: http://localhost:3000
    ports:
      - "3000:3000"
    networks:
      - fastapi_network
    restart: always
    depends_on:
      - prometheus

networks:
  fastapi_network:
    name: fastapi_network
    external: true

volumes:
  prometheus_data:
  grafana_data:
