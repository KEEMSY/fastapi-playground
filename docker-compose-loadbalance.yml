version: '3.8'
services:
  nginx:
    container_name: nginx_load_balancer
    image: nginx:latest
    ports:
      - "7777:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/nginx-status.conf:/etc/nginx/conf.d/status.conf:ro
    depends_on:
      - app
    networks:
      - fastapi_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/home/fastAPI-Playground
    expose:
      - "8000"
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      SYNC_SQLALCHEMY_DATABASE_URL: postgresql://postgres:test@db:5432/fastapi_playground
      ASYNC_SQLALCHEMY_DATABASE_URL: postgresql+asyncpg://postgres:test@db:5432/fastapi_playground
      REDIS_URL: ${REDIS_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DATABASE_URL: postgresql://postgres:test@db:5432/fastapi_playground
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: fastapi_playground
      ENABLE_METRICS: "true"
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    networks:
      - fastapi_network
    # deploy:
    #   mode: replicated
    #   replicas: 3
    #   resources:
    #     limits:
    #       cpus: '0.50'
    #       memory: 512M
    #     reservations:
    #       cpus: '0.25'
    #       memory: 256M

  db:
    container_name: dev_postgres
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: fastapi_playground
      POSTGRES_REPLICATION_MODE: master
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: replicapass
    ports:
      - "15432:5432"
    networks:
      - fastapi_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d fastapi_playground" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "wal_level=replica"
      - "-c"
      - "max_wal_senders=5"
      - "-c"
      - "max_replication_slots=5"

  db_replica:
    container_name: dev_postgres_replica
    image: postgres:15
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: fastapi_playground
      POSTGRES_REPLICATION_MODE: slave
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: replicapass
      POSTGRES_MASTER_HOST: db
      POSTGRES_MASTER_PORT: 5432
    ports:
      - "15433:5432"
    networks:
      - fastapi_network
    depends_on:
      - db
    command:
      - "postgres"
      - "-c"
      - "hot_standby=on"

  redis:
    container_name: dev_redis
    image: redis:7.2.5-alpine
    hostname: redis
    command:
      - 'redis-server'
      - '--requirepass myStrongPassword'
    ports:
      - "16379:6379"
    networks:
      - fastapi_network

networks:
  fastapi_network:
    name: fastapi_network
    external: false

volumes:
  postgres_data:
  postgres_replica_data:
