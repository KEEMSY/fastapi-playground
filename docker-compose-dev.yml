version: '3.8'
services:
  playground:
    container_name: dev_app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/home/fastAPI-Playground
    ports:
      - "7777:8000"
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      SYNC_SQLALCHEMY_DATABASE_URL: postgresql://root:test@db:5432/fastapi_playground
      ASYNC_SQLALCHEMY_DATABASE_URL: postgresql+asyncpg://root:test@db:5432/fastapi_playground
      REDIS_URL: ${REDIS_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DATABASE_URL: postgresql://root:test@db:5432/fastapi_playground
      POSTGRES_USER: root
      POSTGRES_PASSWORD: test
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: fastapi_playground

    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    networks:
      - fastapi_network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
  db:
    container_name: dev_postgres
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: test
      POSTGRES_DB: fastapi_playground
    ports:
      - "15432:5432"
    networks:
      - fastapi_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d fastapi_playground" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: dev_redis
    image: redis:7.2.5-alpine
    hostname: redis
    command:
      - 'redis-server'
      - '--requirepass myStrongPassword'
    ports:
      - "16379:6379"
    networks:
      - fastapi_network
networks:
  fastapi_network:


volumes:
  postgres_data:
